#!/usr/bin/perl
use strict;

use Getopt::Std;
my %opt = (n => 0, x => 0);

getopts("nx", \%opt) or usage();

my $FORMAT = "%12d %s\n";

my %saw;
my $top_dev;

sub do_item {
  my ($item) = @_;
  return if -l $item;
  my ($dev, $ino, $blocks) = (stat $item)[0,1,12];
  $top_dev //= $dev;
  next if $opt{x} && $top_dev != $dev;
  return if $saw{"$dev,$ino"}++;
  my $total_size = $blocks/2;
  if (-d $item) {
    if (opendir my($dh), $item) {
      my @subitem = grep $_ ne '.' && $_ ne '..', readdir $dh;
      $total_size += do_item("$item/$_") for @subitem;
    }
    $item .= "/";
  }
  printf $FORMAT, $total_size, $item;
  return $total_size;
}

@ARGV = (".") unless @ARGV;
open STDOUT, "|-", "sort", "-n" if $opt{n};
do_item($_) for @ARGV;

